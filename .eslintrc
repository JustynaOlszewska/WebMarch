{
    "env": {
        "browser": true, 
        "es6": true
    },
    "extends": [
        "plugin:prettier/recommended",
        "eslint:recommended",
        "plugin:react/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser":"babel-eslint",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 6,
        "sourceType": "module"
    },
    "plugins": [
        "react"
    ],
    "rules": {
        "react/no-children-prop":"off",
        "no-misleading-character-class":"off",
        "no-constant-condition":"off",
        "no-unsafe-negation":"off",
        "no-extra-boolean-cast":"off",
        "no-sparse-arrays":"off",
        "no-func-assign":"off",
        "no-undef":"off",
        "getter-return":"off",
        "no-fallthrough":"off",
        "valid-typeof":"off",
        "no-cond-assign": "off",
        "no-prototype-builtins":"off",
        "no-unsafe-finally":"off",
        "no-empty":"off",
        "no-unused-vars":"off",
        "no-useless-escape":"off",
        "no-console": "off",
        "no-duplicate-imports":"error",
        "strict": 0,
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error"
    },   
    "settings": {
        "react": {
            "createClass": "createReactClass", // Regex for Component Factory to use,
                                               // default to "createReactClass"
            "pragma": "React",  // Pragma to use, default to "React"
            "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
            "version": "detect", // React version. "detect" automatically picks the version you have installed.
                                 // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                                 // default to latest and warns if missing
                                 // It will default to "detect" in the future
            "flowVersion": "0.53" // Flow version
          },
        "propWrapperFunctions": [
              // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
              "forbidExtraProps",
              {"property": "freeze", "object": "Object"},
              {"property": "myFavoriteWrapper"}
          ],
        "linkComponents": [
            // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
            "Hyperlink",
            {"name": "Link", "linkAttribute": "to"}
        ]
        }
      
}